---
title: Upgrading Cloud Service Broker for Azure
owner: Cloud Service Broker
---

This topic tells you how to upgrade <%= vars.product_full %>, including
information about the [upgrade procedure](#procedure), [upgrading service instances](#upgrade-instances),
and specific details about [upgrading to v1.5](#upgrading-specifics).

## <a id="procedure"></a> Upgrade procedure

<p class="note important">
   <strong>Important:</strong> When upgrading <%= vars.product_short %>, service instances might need
   to be upgraded.
   Failure to upgrade one or more instance does not cause the tile installation to fail.<br><br>
   Review the <code>deploy-all</code> errand logs in the change log to verify that
   no errors occurred when upgrading instances.
</p>

To upgrade <%= vars.product_short %>:

1. Before you stage the new tile version,
   [Verify that all service instances are up to date](#upgrade-instances).

2. Download the new version of <%= vars.product_short %> from
   [<%= vars.product_network %>](https://network.pivotal.io/products/cloud-service-broker-azure/).

3. Stage and configure the tile by following the instructions in
   [Installing with Azure](installing-with-azure.html.md.erb).

4. Make all the changes described in [Upgrading to v1.5](#upgrading-specifics).

5. Verify that your configuration complies with the
   [Important notes about upgrading service instances](#upgrade-notes) section later in this topic, especially regarding upgrade all instances config, plans
   and beta offerings.

6. Go to the <%= vars.ops_manager %> Installation Dashboard.

7. Click **Review Pending Changes** and then click **Apply Changes**.

8. Review the `deploy-all` errand logs for any errors created because of the upgrade instances task.

### <a id="upgrade-instances"></a> Verify that service instances are up to date before upgrading the tile

Service instances that haven't been upgraded with one version of the tile might not be upgradable by
a newer version.
For this reason, verify that there are no service instances pending upgrade before staging the new version of the tile.

You can see whether there are instances with a pending upgrade by reviewing the last `deploy-all` errand
log for <%= vars.product_short %>. Alternatively, you can
[verify all instances are up to date with the CLI plug-in](#checking-cli-plugin)
and the `-dry-run` flag, which outputs the list of instances pending upgrade.

If you find instances that are pending upgrade, follow the upgrading instructions for your current version.

### <a id="upgrade-notes"></a> Important notes about upgrading service instances

Before you start upgrading service instances, see the following notes:

- **Enabling the Upgrade all services check box:**

  If the **Upgrade all services** check box is not selected, service instances are not upgraded
  during installation. These instances become unmanageable by the broker.
  Any operations on that instance, such as update, bind, unbind, or delete, are blocked
  until you run the upgrade task.
  You can run the upgrade task at any time before upgrading the product to a later version.
  See [Upgrade All Service Instances configuration](installing-with-azure.html.md.erb#upgrade-all-config) for information
  about how to configure this task.
  Alternatively, you can run the upgrade at a later stage by using the [CLI plug-in](#upgrading-cli-plugin).

- **Enabling the Enable Beta offerings check box:**

  If the **Enable Beta offerings** check box is not selected when applying changes, instances from
  those service offerings are not upgraded. These instances become unmanageable by the broker.
  Verify that the **Enable Beta offerings** check box is selected if you have instances from those
  offerings that you intend to keep updated.

- **Deleting custom plans:**

  If you delete custom plans before upgrading all instances, instances from these plans are not
  upgraded. These instances become unmanageable by the broker. Delete plans after upgrading all
  instances, or see [Release Notes for Cloud Service Broker for Azure](release-notes.html.md.erb) and
  [Upgrading to v1.5](#upgrading-specifics) to prevent conflicting upgrades.

- **Only upgrade the tile after all service instances are up to date:**

  You can run the upgrade all instances task as many times as needed.
  If preferred, you can run the upgrade all instances task by using the cf CLI instead of,
  or in addition to, running it through the tile.
  Failure to upgrade one or more instances does not cause the tile installation to fail.
  Review the `deploy all` errand logs to verify that all instances have upgraded.

### <a id="checking-cli-plugin"></a> Verify that all instances are up to date with the CLI plug-in

To verify that no instances are pending upgrade:

1. Install the [cf CLI UpgradeAllServices plug-in on Cloud Foundry](https://plugins.cloudfoundry.org/#UpgradeAllServices).
1. Follow the instructions in the **Usage** section of the `README` in the
   [upgrade-all-services-cli-plugin](https://github.com/cloudfoundry/upgrade-all-services-cli-plugin#usage)
   GitHub repository to perform a dry run.

   For example:

   ```
   cf upgrade-all-services BROKER-NAME -dry-run
   ```

This command provides a list of instances from enabled plans pending upgrade. If the list is not
empty, upgrade the instances listed before attempting a tile upgrade.

### <a id="upgrading-cli-plugin"></a> Upgrade instances through the CLI plug-in

To run the cf CLI plug-in:

1. Install the [cf CLI UpgradeAllServices plug-in on Cloud Foundry](https://plugins.cloudfoundry.org/#UpgradeAllServices).
1. To run the upgrade, follow the instructions in the **Usage** section of the `README` in the
   [upgrade-all-services-cli-plugin](https://github.com/cloudfoundry/upgrade-all-services-cli-plugin#usage)
   GitHub repository.

   For example:

   ```
   cf upgrade-all-services BROKER-NAME
   ```

Run the CLI plug-in with the `-dry-run` flag before applying the service instance upgrade to find
out which instances are pending upgrade.

## <a id="upgrading-specifics"></a> Upgrade to v1.5

<p class="note">
  <strong>Note:</strong> <%= vars.product_full %> v1.5.0 removes the brokerpak preconfigured subsume
  plan for <strong>Azure SQL MSSQL Database Instance</strong> and for <strong>Azure SQL MSSQL Failover Group</strong>.
  If you have instances that were created in previous versions subsuming them, you must change the plan
  before upgrading.
  See next steps to get an overview of the process to run.
</p>

### Steps needed to upgrade subsumed instances

1. Update service instance to another plan:

For instances that are still part of the plan `subsume`, update them to another plan.

   ```bash
    cf update-service SERVICE-INSTANCE-NAME -p NEW-PLAN
   ```

   Where:

   - `SERVICE-INSTANCE-NAME` is the name of the service instance.
   - `NEW-PLAN` is the name of the new plan.

2. Follow the [Upgrade procedure](#procedure).
