---
title: Service Plan Reference
owner: Cloud Service Broker
---

<strong><%= modified_date %></strong>

This topic provides reference information about the plans and configuration
parameters used for configuring service instances.

See the section below for the service that you want:

- [Azure SQL (MSSQL)](#azure-mssql)
- [Azure SQL (MSSQL) Database](#azure-mssql-db)
- [Azure SQL (MSSQL) Server](#azure-mssql-server)
- [Azure SQL (MSSQL) Failover Group](#azure-mssql-fog)
- [Pre-Configured Server Pairs for Azure SQL (MSSQL) Failover Groups](#azure-mssql-fog-preconfig)
- [Azure SQL Failover Group Failover Runner](#azure-mssql-fog-runner)
- [Azure MySQL](#azure-mysql)
- [Azure PostgreSQL](#azure-postgresql)
- [Azure CosmosDB](#azure-cosmosdb-sql)
- [Azure MongoDB](#azure-cosmosdb-mongo)
- [Azure Redis](#azure-redis)
- [Azure Storage Account](#azure-storage-account)
- [Azure Resource Group](#azure-resource-group)
- [Azure Eventhub](#azure-eventhub)


## <a id="azure-mssql"></a> Azure SQL (MSSQL)

This section applies to the csb-azure-mssql service.
This section lists default plans and configuration for Azure SQL. For more information about
Azure SQL, see the [Microsoft documentation](https://docs.microsoft.com/en-gb/azure/azure-sql/).

### <a id="azure-mssql-plans"></a> Plans

The table below lists the default plans for the csb-azure-mssql service:

| Plan        | CPUs | Storage Size      |
|-------------|------|-------------------|
| mini        | 1    | 5&nbsp;GB         |
| small-v2    | 2    | 5&nbsp;GB         |
| medium      | 8    | 200&nbsp;GB       |
| large       | 32   | 500&nbsp;GB       |
| extra-large | 80   | 1&nbsp;TB         |

### <a id="azure-mssql-plans-config"></a> Plan Configuration Parameters

When configuring <%= vars.product_short %> you can add additional new plans.
The table below lists the plan parameters that you can configure when providing new plans:

| Parameter Name    | Values                          | Default   |
|-------------------|---------------------------------|-----------|
| name              | The plan name.                  | _n/a_     |
| id                | A unique GUID.                  | _n/a_     |
| description       | Description of the new plan.    | _n/a_     |
| max\_storage\_gb  |                                 | 5         |
| cores             | 1&ndash;64, multiples of 2      | 2         |
| sku_name          | See [sku](#azure-mssql-skus) below    | _n/a_     |

For details see <a href="installing-with-azure.html#services">Configure Services with Cloud Service Broker for Azure</a>.

<p class="note">
  <strong>Note:</strong> These configuration values cannot be changed by the developers during
  provision or update operations unless specified in the configuration parameters, as detailed in
  <a href="#azure-mssql-parameters">Configuration Parameters</a> below.
</p>

#### <a id="azure-mssql-skus"></a> SKUs

Stock-keeping units (SKU) are usually formatted as <code>TIER\_FAMILY\_NUMBER-OF-CORES</code>. Where:
<ul>
  <li>Examples of <code>TIER</code> are <code>GP\_S</code>, <code>GP</code>, and <code>HS</code></li>
  <li>Examples of <code>FAMILY</code> are <code>Gen4</code> and <code>Gen5</code></li>
</ul>
Example SKUs are <code>GP\_S\_Gen4\_1</code> and <code>GP\_Gen5\_8</code>.

If you do not define a SKU using the <code>sku_name</code> parameter, the SKU is
computed from the number of cores in your plan.
See [Plans](#azure-mssql-plans) above.

The table below shows the mapping of number of cores to the corresponding Azure SKU:

| Cores | SKU |
|-------|-----|
| 1  | GP\_Gen5\_1 |
| 2  | GP\_Gen5\_2 |
| 4  | GP\_Gen5\_4 |
| 8  | GP\_Gen5\_8  |
| 16 | GP\_Gen5\_16 |
| 32 | GP\_Gen5\_32 |
| 80 | GP\_Gen5\_80 |

For a list of all valid SKUs, run:

<pre><code>az sql db list-editions -l LOCATION -o table</code></pre>

For information about the the vCore purchasing model, see the
<a href="https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-vcore-single-databases">Microsoft documentation</a>.<br>
For information about the the DTU purchasing model, see the
<a href="https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-dtu-single-databases">Microsoft documentation</a>.

<p class="note">
  <strong>Note:</strong> Azure SQL service instances use the vCore model and the Gen5
  hardware generation unless you override this default using the <code>sku_name</code> parameter.
  For more information about the vCore model, see the
  <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-service-tiers-vcore?tabs=azure-portal">Microsoft documentation</a>.
</p>

<p class="note">
  <strong>Note:</strong> When updating a service instance, it is recommended that the SKU for the updated
  service instance should remain in the same tier (<code>GP_S</code>, <code>GP</code>, or <code>HS</code>).
  If you wish to change to a different tier, check the Azure documentation to ensure that updating to the
  new tier is supported.
</p>

### <a id="azure-mssql-parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-azure-mssql PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

For example:

<pre class="terminal">
$ cf create-service csb-azure-mssql small mssql-dev -c '{"instance_name": "mssql-dev"}'
</pre>

You can update the plan or configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME [-p NEW-PLAN] -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning or updating a csb-azure-mssql service:

<style>
main table {
  table-layout: fixed;
}
</style>

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="20%">Default</th>
      <th width="10%">Operation</th>
    </tr>
  </thead>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>The name of the service instance.</td>
    <td><code>csb-azsql-INSTANCE-ID</code> </td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>resource_group</code></td>
    <td>string</td>
    <td>The Azure resource group in which to create the instance.</td>
    <td><code>rg-INSTANCE-NAME</code></td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>db_name</code></td>
    <td>string</td>
    <td>The name of the database.</td>
    <td><code>csb-db</code></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>location</code></td>
    <td>string</td>
    <td>
      The Azure region in which to deploy the service instance.
      <p class="note">
        <strong>Note:</strong> Currently Azure SQL is not available in all regions.
        If you configure a region that is unavailable, <%= vars.product_short %> fails.
      </p>
    </td>
    <td><code>westus</code></td>
    <td>provision</td>
  </tr>
  <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>The ID of the Azure tenant for the service instance.</td>
    <td>The value the operator entered for <strong>Tenant ID</strong> in <%= vars.ops_manager %>.</td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>The ID of the Azure subscription for the service instance.</td>
    <td>The value the operator entered for <strong>Subscription ID</strong> in <%= vars.ops_manager %>.</td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td>The ID of the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client ID</strong> in <%= vars.ops_manager %>.</td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>The secret (password) for the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client Secret</strong> in <%= vars.ops_manager %>.</td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>sku_name</code></td>
    <td>string</td>
    <td>
      The Azure stock-keeping unit (SKU).
      For more information about configuring this parameter, see <a href="#azure-mssql-skus">SKUs</a> above.
    </td>
    <td><em>n/a</em></td>
    <td>provision and update</td>
  </tr>
  <tr>
    <td><code>authorized_network</code></td>
    <td>string</td>
    <td>The Azure subnet ID, in long form, that the instance is connected to through a service endpoint.
    The subnet must have the <code>Microsoft.sql</code> service enabled.</td>
    <td><em>n/a</em></td>
    <td>provision and update</td>
  </tr>
  <tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Set to <code>true</code> to skip automatic Azure provider registration.
    Set if the service principal being used does not have the rights to register providers.</td>
    <td><code>false</code></td>
    <td>provision and update</td>
  </tr>
</table>

### <a id="azure-mssql-binding-creds"></a> Binding Credentials

You can bind a service to an app by running:

```bash
cf bind-service APP_NAME SERVICE_INSTANCE --binding-name BINDING_NAME
```

The format for binding credentials made available to the app is as follows:

```json
{
    "name" : "DATABASE NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URI",
    "jdbcUrlForAuditingEnabled": "JDBC-FORMAT-CONNECTION-URI",
    "sqldbName" : "DATABASE-NAME",
    "sqldbResourceGroup" : "RESOURCE-GROUP",
    "sqlServerName" : "SERVER-NAME",
    "sqlServerFullyQualifiedDomainName" : "SERVER-FQDN",
    "databaseLogin" : "AUTHENTICATION-USERNAME",
    "databaseLoginPassword" : "AUTHENTICATION-PASSWORD"
}
```

## <a id="azure-mssql-db"></a>Azure SQL (MSSQL) Database

This section applies to the service csb-azure-mssql-db.
The csb-azure-mssql-db service manages Azure SQL databases on pre-configured database servers on
Azure SQL. For more information about Azure SQL, see the
[Microsoft documentation](https://docs.microsoft.com/en-gb/azure/azure-sql/).

### <a id="azure-mssql-db-pre-configured-db-servers"></a> Configuring Service

To configure the service:

1. Provide the pre-configured database servers in the following format when configuring <%= vars.product_short %>:

    ```json
    {
       "server1":{
          "server_name": "server1_fqdn",
          "server_resource_group": "server1_resource_group",
          "admin_username": "server1_admin_username",
          "admin_password": "server1_admin_password"
       },
       "server2":{
          "server_name": "server2_fqdn",
          "server_resource_group": "server2_resource_group",
          "admin_username": "server2_admin_username",
          "admin_password": "server2_admin_password"
       }
    }
    ```

    For more information about the <%= vars.product_short %> configuration option, see
    <a href="installing-with-azure.html#services">Configure Services with Cloud Service Broker for Azure</a>.

### <a id="azure-mssql-db-plans"></a> Plans

The table below lists the plans for the csb-azure-mssql-db service:

| Plan       | CPUs | Maximum Storage Size |
|------------|------|--------------|
|mini        | 2    | 5&nbsp;GB    |
|small       | 2    | 5&nbsp;GB    |
|medium      | 8    | 200&nbsp;GB  |
|large       | 32   | 500&nbsp;GB  |
|extra-large | 80   | 1&nbsp;TB    |
|subsume*    | _n/a_| _n/a_        |

<sup>*</sup> The subsume plan is used to import existing Azure MSSQL databases to bring them under
the control of <%= vars.product_short %>. For more information, see
[Subsuming a Microsoft Azure Service Broker MSSQL Database Instance](azure-mssql-subsume.html).

### <a id="azure-mssql-db-plans-config"></a> Plan Configuration Parameters

When configuring the <%= vars.product_short %> you can add additional new plans.
The table below lists the plan parameters that you can configure:

| Parameter Name    | Values                          | Default   |
|-------------------|---------------------------------|-----------|
| name              | The plan name.                  | _n/a_     |
| id                | A unique GUID.                  | _n/a_     |
| description       | Description of the new plan.    | _n/a_     |
| max\_storage\_gb  |                                 | 5         |
| cores             | 1&ndash;64, multiples of 2      | 2         |
| sku_name          | See [sku](#azure-mssql-db-skus) below | _n/a_     |

For details see <a href="installing-with-azure.html#services">Configure Services with Cloud Service Broker for Azure</a>.

#### <a id="azure-mssql-db-skus"></a> SKUs

SKUs are usually formatted as <code>TIER\_FAMILY\_NUMBER-OF-CORES</code>.
Where:
<ul>
  <li>Examples of <code>TIER</code> are <code>GP\_S</code>, <code>GP</code>, and <code>HS</code></li>
  <li>Examples of <code>FAMILY</code> are <code>Gen4</code> and <code>Gen5</code></li>
</ul>
Example SKUs are <code>GP\_S\_Gen4\_1</code> and <code>GP\_Gen5\_8</code>.

If you do not define a SKU using the <code>sku_name</code> parameter, the SKU is
computed from the number of cores in your plan.
See [Plans](#azure-mssql-db-plans) above.

The table below shows the mapping of number of cores to the corresponding Azure SKU:

| Cores | SKU |
|-------|-----|
| 1  | GP\_Gen5\_1 |
| 2  | GP\_Gen5\_2 |
| 4  | GP\_Gen5\_4 |
| 8  | GP\_Gen5\_8  |
| 16 | GP\_Gen5\_16 |
| 32 | GP\_Gen5\_32 |
| 80 | GP\_Gen5\_80 |

For a list of all valid SKUs, run:

```
az sql db list-editions -l LOCATION -o table
```

For information about the the vCore purchasing model, see the
<a href="https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-vcore-single-databases">Microsoft documentation</a>.<br>
For information about the the DTU purchasing model, see the
<a href="https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-dtu-single-databases">Microsoft documentation</a>.

<p class="note">
  <strong>Note:</strong> Azure SQL service instances use the vCore model and the Gen5
  hardware generation unless you override this default using the <code>sku_name</code> parameter.
  For more information about the vCore model, see the
  <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-service-tiers-vcore?tabs=azure-portal">Microsoft documentation</a>.
</p>

<p class="note">
  <strong>Note:</strong> When updating a service instance, the SKU for the updated
  service instance must remain in the same tier (<code>GP_S</code>, <code>GP</code>, or <code>HS</code>).
  If you update to a different tier, Azure refuses the update request.
</p>

### <a id="azure-mssql-db-parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-azure-mssql-db PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

For example:

<pre class="terminal">
$ cf create-service csb-azure-mssql-db small mssql-dev -c '{"server":"server1"}'
</pre>

You can update the plan or configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME [-p NEW-PLAN] -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning or updating a csb-azure-mssql-db service:

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="50%">Description</th>
      <th width="20%">Default</th>
    </tr>
  </thead>
  <tr>
    <td><code>db_name</code></td>
    <td>string</td>
    <td>The name of the database.</td>
    <td><code>csb-db-INSTANCE-ID</code></td>
  </tr>
  <tr>
    <td><code>server</code></td>
    <td>string</td>
    <td>
      Required: The name of the server on which to create the database.
      This must match one of the <code>SERVER</code> parameters in one of the servers configured when configuring the service.
    </td>
    <td><em>n/a</em></td>
  </tr>
  <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>The ID of the Azure tenant for the service instance.</td>
    <td>The value the operator entered for <strong>Tenant ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>The ID of the Azure subscription for the service instance.</td>
    <td>The value the operator entered for <strong>Subscription ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td>The ID of the Azure service principal to authenticate for service instance creation. <%# Clarification needed %></td>
    <td>The value the operator entered for <strong>Client ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>The secret (password) for the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client Secret</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>sku_name</code></td>
    <td>string</td>
    <td>
      The Azure stock-keeping unit (SKU).
      For more information about configuring this parameter, see <a href="#azure-mssql-db-skus">SKUs</a> above.
    </td>
    <td><em>n/a</em></td>
  </tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Set to <code>true</code> to skip automatic Azure provider registration.
    Set if the service principal being used does not have the rights to register providers.</td>
    <td><code>false</code></td>
  </tr>
  <tr>
    <td><code>short_term_retention_days</code></td>
    <td>number</td>
    <td>Retention period in days for short-term retention (Point in Time Restore) policy.
    The maximum period is 35 days.</td>
    <td>7</td>
  </tr>
</table>

### <a id="azure-mssql-db-binding-creds"></a> Binding Credentials

The format for binding credentials for an Azure SQL database is as follows:

```json
{
    "name" : "DATABASE-NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "server" : "SERVER-NAME",
    "uri" : "DATABASE-CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URI",
    "jdbcUrlForAuditingEnabled" : "JDBC-FORMAT-CONNECTION-URI",
    "sqldbName" : "DATABASE-NAME",
    "sqlServerName" : "SERVER-NAME",
    "sqlServerFullyQualifiedDomainName" : "SERVER-FQDN",
    "databaseLogin" : "AUTHENTICATION-USERNAME",
    "databaseLoginPassword" : "AUTHENTICATION-PASSWORD"
}
```

## <a id="azure-mssql-server"></a> Azure SQL (MSSQL) Server

This section applies to the csb-azure-mssql-server service.
The csb-azure-mssql-server service manages stand alone Azure SQL server service instances on Azure.
No databases are created or managed.

### <a id="azure-mssql-server-plans"></a> Plans

The only plan is `standard`.

### <a id="azure-mssql-server-parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-azure-mssql-server standard SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning a csb-azure-mssql-server service:

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="50%">Description</th>
      <th width="20%">Default</th>
    </tr>
  </thead>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>The name of the service instance for the server.</td>
    <td><code>csb-azsql-svr-INSTANCE-ID</code></td>
  </tr>
  <tr>
    <td><code>resource_group</code></td>
    <td>string</td>
    <td>The Azure resource group in which to create the instance.</td>
    <td><code>rg-INSTANCE-NAME</code></td>
  </tr>
  <tr>
    <td><code>admin_username</code></td>
    <td>string</td>
    <td>The admin username for the server.</td>
    <td>A randomly generated string.</td>
  </tr>
  <tr>
    <td><code>admin_password</code></td>
    <td>string</td>
    <td>The admin password for the server.</td>
    <td>A randomly generated string.</td>
  </tr>
  <tr>
    <td><code>location</code></td>
    <td>string</td>
    <td>
      The Azure region in which to create the server. <%# Should we add the note about not being available in all regions here like in Azure SQL above? %>
    </td>
    <td><code>westus</code></td>
  </tr>
  <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>The ID of the Azure tenant for the service instance.</td>
    <td>The value the operator entered for <strong>Tenant ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>The ID of the Azure subscription for the service instance.</td>
    <td>The value the operator entered for <strong>Subscription ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td>The ID of the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>The secret (password) for the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client Secret</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>authorized_network</code></td>
    <td>string</td>
    <td>The Azure subnet ID, in long form, that the instance is connected to through a service endpoint.
    The subnet must have the <code>Microsoft.sql</code> service enabled.</td>
    <td><em>n/a</em></td>
  </tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Set to <code>true</code> to skip automatic Azure provider registration.
    Set if the service principal being used does not have the rights to register providers.</td>
    <td><code>false</code></td>
  </tr>
</table>

### <a id="azure-mssql-server-binding-creds"></a> Binding Credentials

The format for binding credentials for Azure SQL Server is as follows:

```json
{
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "sqlServerName" : "SERVER-NAME",
    "sqldbResourceGroup" : "RESOURCE-GROUP-FOR-SERVER",
    "sqlServerFullyQualifiedDomainName" : "SERVER-FQDN",
    "databaseLogin" : "AUTHENTICATION-USERNAME",
    "databaseLoginPassword" : "AUTHENTICATION-PASSWORD"
}
```

## <a id="azure-mssql-fog"></a> Azure SQL (MSSQL) Failover Group

This section applies to the csb-azure-mssql-failover-group service.
This section lists the default plans and configuration options for Azure SQL Failover Group on Azure.

### <a id="azure-mssql-fog-plans"></a> Plans

The table below lists the plans for the csb-azure-mssql-failover-group service:

| Plan       | CPUs | Storage Size |
|------------|------|--------------|
| small       | 2    | 50&nbsp;GB       |
| medium      | 8    | 200&nbsp;GB       |
| large       | 32   | 500&nbsp;GB       |

### <a id="azure-mssql-fog-config-options"></a> Configuration Options

<%# Any reason this section is called Configuration Options and not Plan Configuration parameters
like in the other services? Which is the better name? See also PostgreSQL section below. %>

The table below lists the options you can configure:

| Option Name | Values              | Default |
|-------------|---------------------|---------|
| max\_storage\_gb  |             | 50      |
| cores       | 1&ndash;64, multiples of 2 | 2       |


#### <a id="azure-mssql-fog-skus"></a> SKUs

SKUs are usually formatted as <code>TIER\_FAMILY\_NUMBER-OF-CORES</code>. Where:
<ul>
  <li>Examples of <code>TIER</code> are <code>GP\_S</code>, <code>GP</code>, and <code>HS</code></li>
  <li>Examples of <code>FAMILY</code> are <code>Gen4</code> and <code>Gen5</code></li>
</ul>
Example SKUs are <code>GP\_S\_Gen4\_1</code> and <code>GP\_Gen5\_8</code>.

If you do not define a SKU using the <code>sku_name</code> parameter, the SKU is
computed from the number of cores in your plan.
See [Plans](#azure-mssql-fog-plans) above.

For a list of all valid SKUs, run:

<pre><code>az sql db list-editions -l LOCATION -o table</code></pre>

The table below shows the mapping of number of cores to the corresponding SKU:

| Cores | SKU |
|-------|-----|
| 1  | GP\_Gen5\_1 |
| 2  | GP\_Gen5\_2 |
| 4  | GP\_Gen5\_4 |
| 8  | GP\_Gen5\_8  |
| 16 | GP\_Gen5\_16 |
| 32 | GP\_Gen5\_32 |
| 80 | GP\_Gen5\_80 |

For information about the the vCore purchasing model, see the
<a href="https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-vcore-single-databases">Microsoft documentation</a>.<br>
For information about the the DTU purchasing model, see the
<a href="https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-dtu-single-databases">Microsoft documentation</a>.

<p class="note">
  <strong>Note:</strong> Azure SQL service instances use the vCore model and the Gen5
  hardware generation unless you override this default using the <code>sku_name</code> parameter.
  For more information about the vCore model, see the
  <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-service-tiers-vcore?tabs=azure-portal">Microsoft documentation</a>.
</p>

<p class="note">
  <strong>Note:</strong> When updating a service instance, the SKU for the updated
  service instance must remain in the same tier (<code>GP_S</code>, <code>GP</code>, or <code>HS</code>).
  If you update to a different tier, Azure refuses the update request.
</p>

### <a id="azure-mssql-fog-parameters"></a> Configuration Parameters

Except as noted below, the configuration is generally the same as for [Azure SQL](#azure-mssql) above. <%# Which configuration is this referring to? %>

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning a csb-azure-mssql-failover-group service:

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="50%">Description</th>
      <th width="20%">Default</th>
    </tr>
  </thead>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>The name of the service instance.</td>
    <td><code>csb-azsql-INSTANCE-ID</code></td>
  </tr>
  <tr>
    <td><code>resource_group</code></td>
    <td>string</td>
    <td>The Azure resource group in which to create the instance.</td>
    <td><code>rg-INSTANCE-NAME</code></td>
  </tr>
  <tr>
    <td><code>location</code></td>
    <td>string</td>
    <td>
      The Azure region in which to deploy the service instance.
      <p class="note">
        <strong>Note:</strong> Currently Azure SQL is not available in all regions.
        If you configure a region that is unavailable, <%= vars.product_short %> fails.
      </p>
    </td>
    <td><code>westus</code></td>
  </tr>
  <tr>
    <td><code>failover_location</code></td>
    <td>string</td>
    <td>The Azure region for the failover instance.</td>
    <td><code>DEFAULT-REGIONAL-PAIR</code>. For information about regional pairs, see the <a href="https://docs.microsoft.com/en-us/azure/best-practices-availability-paired-regions#azure-regional-pairs">Microsoft Documentation</a></td>
  </tr>
  <tr>
    <td><code>read_write_endpoint_failover_policy</code></td>
    <td>string</td>
    <td>The Read/Write failover policy. The options are <code>Automatic</code> or <code>Manual</code></td>.
    <td><code>Automatic</code></td>
  </tr>
  <tr>
    <td><code>failover_grace_minutes</code></td>
    <td>number</td>
    <td>The grace period in minutes before failover with data loss is attempted.</td>
    <td><code>60</code></td>
  </tr>
  <tr>
    <td><code>min_capacity</code></td>
    <td>number</td>
    <td>The minimum capacity in GB that the database has allocated, if not paused.
      You can only set this property for General Purpose Serverless databases.</td>
    <td><code>1</code></td>
  </tr>
  <tr>
    <td><code>auto_pause_delay</code></td>
    <td>number</td>
    <td>The time in minutes after which the database is automatically paused.
      A value of <code>-1</code> means that automatic pause is deactivated.
      You can only set this property for General Purpose Serverless databases.</td>
    <td><code>-1</code></td>
  </tr>
  <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>The ID of the Azure tenant for the service instance.</td>
    <td>The value the operator entered for <strong>Tenant ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>The ID of the Azure subscription for the service instance.</td>
    <td>The value the operator entered for <strong>Subscription ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td>The ID of the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>The secret (password) for the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client Secret</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>sku_name</code></td>
    <td>string</td>
    <td>
      The Azure stock-keeping unit (SKU).
      For more information about configuring this parameter, see <a href="#azure-mssql-fog-skus">SKUs</a> above.
    </td>
    <td><em>n/a</em></td>
  </tr>
  <tr>
    <td><code>authorized_network</code></td>
    <td>string</td>
    <td>The Azure subnet ID, in long form, that the instance is connected to through a service endpoint.
    The subnet must have the <code>Microsoft.sql</code> service enabled.</td>
    <td><em>n/a</em></td>
  </tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Set to <code>true</code> to skip automatic Azure provider registration.
    Set if the service principal being used does not have the rights to register providers.</td>
    <td><code>false</code></td>
  </tr>
</table>

### <a id="azure-mssql-fog-binding-creds"></a> Binding Credentials

The format for binding credentials for Azure SQL Failover Group is as follows:

```json
{
    "name" : "DATABASE-NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE-CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URI",
    "sqldbName" : "DATABASE-NAME",
    "sqlServerName" : "SERVER-NAME",
    "sqlServerFullyQualifiedDomainName" : "SERVER-FQDN",
    "databaseLogin" : "AUTHENTICATION-USERNAME",
    "databaseLoginPassword" : "AUTHENTICATION-PASSWORD"
}
```

## <a id="azure-mssql-fog-preconfig"></a> Pre-Configured Server Pairs for Azure SQL (MSSQL) Failover Groups

This section applies to the csb-azure-mssql-db-failover-group service, which manages
Azure SQL Failover Group databases on pre-configured server pairs on Azure.
If you already have a failover group database server pre-configured,
use this service instead of the more general Azure SQL Failover Group service.

### <a id="azure-mssql-fog-preconfig-plans"></a> Plans

The table below lists the plans for the csb-azure-mssql-db-failover-group service:

| Plan       | CPUs | Storage Size |
|------------|------|--------------|
|small       | 2    | 50&nbsp;GB         |
|medium      | 8    | 200&nbsp;GB        |
|large       | 32   | 500&nbsp;GB        |
|existing    | _n/a_ | _n/a_          |

The `existing` plan connects to an existing failover group database to allow apps,
typically in a second foundation, to bind to the database.

### <a id="azure-mssql-fog-preconfig-plans-config"></a> Plan Configuration Parameters

The table below lists the plan parameters that you can configure:

| Parameter Name | Values           | Default |
|-------------|---------------------|---------|
| max\_storage\_gb  |               | 50      |
| cores       | 1&ndash;64, multiples of 2 | 2       |
|subsume*    | _n/a_| _n/a_        |

<sup>*</sup> The subsume plan is used to import existing Azure MSSQL databases to bring them under
the control of <%= vars.product_short %>.
For more information, see
[Subsuming a Microsoft Azure Service Broker MSSQL Failover Group Instance](azure-mssql-fog-subsume.html).

#### <a id="azure-mssql-fog-preconfig-skus"></a> SKU

SKUs are usually formatted as <code>TIER\_FAMILY\_NUMBER-OF-CORES</code>. Where:
<ul>
  <li>Examples of <code>TIER</code> are <code>GP\_S</code>, <code>GP</code>, and <code>HS</code></li>
  <li>Examples of <code>FAMILY</code> are <code>Gen4</code> and <code>Gen5</code></li>
</ul>
Example SKUs are <code>GP\_S\_Gen4\_1</code> and <code>GP\_Gen5\_8</code>.

If you do not define a SKU using the <code>sku_name</code> parameter, the SKU is
computed from the number of cores in your plan.
See [Plans](#azure-mssql-fog-preconfig-plans) above.

For a list of all valid SKUs, run:

<pre><code>az sql db list-editions -l LOCATION -o table</code></pre>

The table below shows the mapping of number of cores to the corresponding SKU:

| Cores | SKU |
|-------|-----|
| 1  | GP\_Gen5\_1 |
| 2  | GP\_Gen5\_2 |
| 4  | GP\_Gen5\_4 |
| 8  | GP\_Gen5\_8  |
| 16 | GP\_Gen5\_16 |
| 32 | GP\_Gen5\_32 |
| 80 | GP\_Gen5\_80 |
<%# Is this table necessary? Can we get this information from the links below? %>

For information about the the vCore purchasing model, see the
<a href="https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-vcore-single-databases">Microsoft documentation</a>.<br>
For information about the the DTU purchasing model, see the
<a href="https://docs.microsoft.com/en-us/azure/azure-sql/database/resource-limits-dtu-single-databases">Microsoft documentation</a>.

<p class="note">
  <strong>Note:</strong> Azure SQL service instances use the vCore model and the Gen5
  hardware generation unless you override this default using the <code>sku_name</code> parameter.
  For more information about the vCore model, see the
  <a href="https://docs.microsoft.com/en-us/azure/sql-database/sql-database-service-tiers-vcore?tabs=azure-portal">Microsoft documentation</a>.
</p>

### <a id="azure-mssql-fog-preconfig-parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-azure-mssql-db-failover-group PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the plan or configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME [-p NEW-PLAN] -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning a csb-azure-mssql-db-failover-group service:

<table>
  <thead>
    <tr>
    <th width="20%">Parameter Name</th>
    <th width="10%">Type</th>
    <th width="50%">Description</th>
    <th width="20%">Default</th>
    </tr>
  </thead>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>The name of the failover group service instance.</td>
    <td><code>csb-azsql-fog-INSTANCE-ID</code></td>
  </tr>
  <tr>
    <td><code>db_name</code></td>
    <td>string</td>
    <td>The name of the database.</td>
    <td><code>csb-fog-db-INSTANCE-ID</code></td>
  </tr>
  <tr>
    <td><code>server_pair</code></td>
    <td>string</td>
    <td>
      This must match one of the <code>server_credential_pairs</code> parameters in one of the servers configured when configuring the service.
    </td>
    <td><em>n/a</em></td>
  </tr>
  <tr>
    <td><code>read_write_endpoint_failover_policy</code></td>
    <td>string</td>
    <td>The Read/Write failover policy. The options are <code>Automatic</code> or <code>Manual</code></td>
    <td><code>Automatic</code></td>
  </tr>
  <tr>
    <td><code>failover_grace_minutes</code></td>
    <td>number</td>
    <td>The grace period in minutes before failover with data loss is attempted.</td>
    <td><code>60</code></td>
  </tr>
  <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>The ID of the Azure tenant for the service instance.</td>
    <td>The value the operator entered for <strong>Tenant ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>The ID of the Azure subscription for the service instance.</td>
    <td>The value the operator entered for <strong>Subscription ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td>The ID of the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>The secret (password) for the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client Secret</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>sku_name</code></td>
    <td>string</td>
    <td>
      The Azure stock-keeping unit (SKU).
      For more information about configuring this parameter, see <a href="#azure-mssql-fog-preconfig-skus">SKUs</a> above.
    </td>
    <td><em>n/a</em></td>
  </tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Set to <code>true</code> to skip automatic Azure provider registration.
    Set if the service principal being used does not have the rights to register providers.</td>
    <td><code>false</code></td>
  </tr>
</table>

### <a id="azure-mssql-fog-preconfig-binding-creds"></a> Binding Credentials

The format for binding credentials for Azure SQL Failover Group is as follows:

```json
{
    "name" : "DATABASE-NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE-CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URI",
    "sqldbName" : "DATABASE-NAME",
    "sqlServerName" : "SERVER-NAME",
    "sqlServerFullyQualifiedDomainName" : "SERVER-FQDN",
    "databaseLogin" : "AUTHENTICATION-USERNAME",
    "databaseLoginPassword" : "AUTHENTICATION-PASSWORD"
}
```

## <a id="azure-mssql-fog-runner"></a> Azure SQL Failover Group Failover Runner

This section applies to the csb-azure-mssql-fog-run-failover service.

The csb-azure-mssql-fog-run-failover service is a pseudo-service that upon
provisioning causes a failover group secondary server to become the primary.
Upon de-provisioning, the failover is undone and the original primary server
once again becomes the primary.

### <a id="azure-mssql-fog-runner-plans"></a> Plans

The only plan is `standard`.

### <a id="azure-mssql-fog-runner-parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-azure-mssql-fog-run-failover standard SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning a csb-azure-mssql-fog-run-failover service:

<table>
  <thead>
    <tr>
    <th width="20%">Parameter Name</th>
    <th width="10%">Type</th>
    <th width="50%">Description</th>
    <th width="20%">Default</th>
    </tr>
  </thead>
  <tr>
    <td><code>fog_instance_name</code></td>
    <td>string</td>
    <td>The name of the service instance for the failover group to target.</td>
    <td><em>n/a</em></td>
  </tr>
  <tr>
    <td><code>server_pair_name</code></td>
    <td>string</td>
    <td>
      The server pair from <code>server_pairs</code> below.
      This must match one of the <code>PAIR</code> parameters in <code>server_pairs</code>.
      For example, <code>PAIR-1</code> in the code snippet in the <code>server_credentials_pairs</code> row below.
    </td>
    <td><em>n/a</em></td>
  </tr>
  <tr>
    <td><code>server_pairs</code></td>
    <td>JSON</td>
    <td>
      A list of failover group server pairs.
      Format: <pre><code>{ "PAIR-1": { "primary":{"server_name":"...", "resource_group":..."}, "secondary":{"server_name":"...", "resource_group":..."}, "PAIR-2":...}</code></pre>
      One of the values you use for <code>PAIR</code> must match the <code>server_pair_name</code> parameter above.
    </td>
    <td><em>n/a</em></td>
  </tr>
  <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>The ID of the Azure tenant for the service instance.</td>
    <td>The value the operator entered for <strong>Tenant ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>The ID of the Azure subscription for the service instance.</td>
    <td>The value the operator entered for <strong>Subscription ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td>The ID of the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>The secret (password) for the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client Secret</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Set to <code>true</code> to skip automatic Azure provider registration.
    Set if the service principal being used does not have the rights to register providers.</td>
    <td><code>false</code></td>
  </tr>
</table>

### <a id="azure-mssql-fog-runner-binding-creds"></a> Binding Credentials

There are no binding credentials for this service.

## <a id="azure-mysql"></a> Azure MySQL

This section applies to the csb-azure-mysql service.
This section lists default plans and configuration for Azure MySQL. For more information about
Azure MySQL, see the [Microsoft documentation](https://docs.microsoft.com/en-gb/azure/mysql/).

### <a id="azure-mysql-plans"></a> Plans

The table below lists the default plans for the csb-azure-mssql service:

| Plan        | CPUs | Storage Size      |
|-------------|------|-------------------|
| small       | 2    | 5&nbsp;GB         |
| medium      | 4    | 10&nbsp;GB        |
| large       | 8    | 20&nbsp;GB        |

### <a id="azure-mysql-plans-config"></a> Plan Configuration Parameters

When configuring <%= vars.product_short %> you can add additional new plans.
The table below lists parameters which can only be added at the plan level. Further [configuration properties](#azure-mysql-parameters) can also be supplied as parameters in plan creation.

| Parameter Name    | Description                     | Default   | Example Value |
|-------------------|---------------------------------|-----------|---------------|
| name              | The plan name.                  | _n/a_     | "plan_1"      |
| id                | A unique GUID.                  | _n/a_     | "guid"        |
| description       | Description of the new plan.    | _n/a_     | "This is a plan" |
| use_tls           | Use TLS for connection.         | true      | true
| tls_min_version   | Minimum enforced TLS version.  Possible values are TLSEnforcementDisabled, TLS1_0, TLS1_1 (default), and TLS1_2  | TLS1_1    | TLS1_1 |
| enable_threat_detection_policy   | Threat Detection Policy.   | false   | false |
| threat_detection_policy_emails   | A list of email addresses which alerts should be sent to.   | _n/a_   |  ["account@email.com"] |
| email_account_admins   | Account administrators emailed when threat alert triggered  | false   | false |
| firewall_rules   | Array of firewall rule start/end IP pairs  | []   | [["1.2.3.4", "2.3.4.5"] |
| private_endpoint_subnet_id   | ID of the Subnet within which Private Endpoint will be created  | ""   | "idofsubnet" |
| private_dns_zone_ids   | Array of Private DNS Zone IDs to create private DNS zone groups for when using Private Endpoints  | []   | ["idOfSubnet", "anotherIdOfSubnet"] |

For further configuration parameters see <a href="installing-with-azure.html#services">Configure Services with Cloud Service Broker for Azure</a>.

<p class="note">
  <strong>Note:</strong> These configuration values set in the plan cannot be changed by the developers during provision or update operations.
</p>

#### <a id="azure-mssql-skus"></a> SKUs

Stock-keeping units (SKU) are usually formatted as <code>TIER\_FAMILY\_NUMBER-OF-CORES</code>. Where:
<ul>
  <li>Examples of <code>TIER</code> are <code>GP\_S</code>, <code>GP</code>, and <code>HS</code></li>
  <li>Examples of <code>FAMILY</code> are <code>Gen4</code> and <code>Gen5</code></li>
</ul>
Example SKUs are <code>GP\_S\_Gen4\_1</code> and <code>GP\_Gen5\_8</code>.

For more information see [Azure MySQL pricing tiers](https://docs.microsoft.com/en-us/azure/mysql/concepts-pricing-tiers).

If you do not define a SKU using the <code>sku_name</code> parameter, the SKU is
computed from the number of cores in your plan.
See [Plans](#azure-mssql-plans) above.

<p class="note">
  <strong>Note:</strong> When updating a service instance, the SKU for the updated
  service instance must remain in the same tier (<code>GP_S</code>, <code>GP</code>, or <code>HS</code>).
  If you update to a different tier, Azure refuses the update request.
</p>

### <a id="azure-mysql-parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-azure-mysql PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

For example:

<pre class="terminal">
$ cf create-service csb-azure-mysql small mysql-dev -c '{"instance_name": "mysql-dev"}'
</pre>

You can update the plan or configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME [-p NEW-PLAN] -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning or updating a csb-azure-mssql service:

<style>
main table {
  table-layout: fixed;
}
</style>

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="10%">Default</th>
      <th width="20%">Constraints</th>
    </tr>
  </thead>
  <tr>
    <td><code>cores</code></td>
    <td>integer</td>
    <td>Number vcores for the instance (upto the maximum allowed for the service tier)</td>
    <td><code>2</code> </td>
    <td><code>maximum: 64
minimum: 1
multipleOf: 2</code></td>
  </tr>
  <tr>
    <td><code>storage_gb</code></td>
    <td>integer</td>
    <td>Storage allocated to the database instance in GB</td>
    <td><code>5</code> </td>
    <td><code>maximum: 16384
minimum: 5</code> </td>
  </tr>
  <tr>
    <td><code>mysql_version</code></td>
    <td>string</td>
    <td>The version for the MySQL instance.</td>
    <td><code>"5.7"</code></td>
    <td><code>"5.6": MySQL v5.6
        "5.7": MySQL v5.7
        "8.0": MySQL v8.0</code></td>
  </tr>
  <tr>
    <td><code>mysql_version</code></td>
    <td>string</td>
    <td>The version for the MySQL instance.</td>
    <td><code>"5.7"</code></td>
    <td><code>"5.6": MySQL v5.6
        "5.7": MySQL v5.7
        "8.0": MySQL v8.0</code> (Can not be updated)</td>
  </tr>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>Name for your MySQL instance</td>
    <td><code>csb-mysql-INSTANCE-ID</code></td>
    <td><code>maxLength: 98
        minLength: 6
        pattern: ^[a-z][a-z0-9-]+$</code></td>
  </tr>
  <tr>
    <td><code>resource_group</code></td>
    <td>string</td>
    <td>Name for the resource group for this instance.</td>
    <td><code>""</code></td>
    <td><code>maxLength: 64
        minLength: 0
        pattern: ^[a-z][a-z0-9-]+$|^$</code>
(Can not be updated)</td>
  </tr>
  <tr>
    <td><code>db_name</code></td>
    <td>string</td>
    <td>Name for your database</td>
    <td><code>csb-db</code></td>
    <td><code>maxLength: 64</code></td>
  </tr>
  <tr>
    <td><code>authorized_network</code></td>
    <td>string</td>
    <td>The subnet ID of the Azure VNET to which the instance is locked down to.</td>
    <td><code>default</code></td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>authorized_networks</code></td>
    <td>array</td>
    <td>The subnet IDs of the Azure VNETs to which the instance is locked down to.</td>
    <td><code>default</code></td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>location</code></td>
    <td>string</td>
    <td>The location of the mysql instance.</td>
    <td><code>westus</code></td>
    <td>See locations [here](https://azure.microsoft.com/en-gb/global-infrastructure/data-residency/#select-geography)
(Can not be updated)</td>
  </tr>
  <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>Azure Tenant to create resource in</td>
    <td>Value set in `Azure Config` tab</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>Azure Subscription to create resource in</td>
    <td>Value set in `Azure Config` tab</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td> Client ID of Azure principal</td>
    <td>Value set in `Azure Config` tab</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>Client secret for Azure principal</td>
    <td>Value set in `Azure Config` tab</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Skip automatic Azure provider registration, set to true if service principal being used does not have rights to register providers</td>
    <td>false</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>sku_name</code></td>
    <td>string</td>
    <td>Azure sku (typically, tier [B,GP,MO] + family [Gen4,Gen5] + cores, e.g. B_Gen4_1, GP_Gen5_8, see https://docs.microsoft.com/en-us/azure/mysql/concepts-pricing-tiers) Will be computed from cores if empty.</td>
    <td>""</td>
    <td>Can not be updated</td>
  </tr>
  <tr>
    <td><code>backup_retention_days</code></td>
    <td>integer</td>
    <td>Backup retention days for the server, supported values are between 7 and 35 days.</td>
    <td>7</td>
    <td>n/a</td>
  </tr>
</table>

### <a id="azure-mysql-binding-creds"></a> Binding Credentials

You can bind a service to an app by running:

```bash
cf bind-service APP_NAME SERVICE_INSTANCE --binding-name BINDING_NAME
```

The format for binding credentials made available to the app is as follows:

```json
{
    "jdbcUrl" : "The jdbc url to connect to the database instance and database.",
    "username" : "The username to authenticate to the database instance.",
    "password" : "The password to authenticate to the database instance.",
    "uri" : "The uri to connect to the database instance and database.",
}
```

## <a id="azure-postgresql"></a> Azure PostgreSQL

This section applies to the csb-azure-postgresql service.
This section lists the default plans and configuration options for PostgreSQL on Azure.

### <a id="azure-postgresql-plans"></a> Plans

The table below lists the plans for the csb-azure-postgresql service:

| Plan | Version | CPUs | Memory Size | Disk Size |
|------|---------|------|-------------|-----------|
|small | 11      | 2    | minimum 4&nbsp;GB    | 5&nbsp;GB       |
|medium| 11      | 4    | minimum 8&nbsp;GB    | 10&nbsp;GB      |
|large | 11      | 8    | minimum 16&nbsp;GB   | 20&nbsp;GB     |

### <a id="azure-postgresql-config-options"></a> Configuration Options

The table below lists the options you can configure across all supported platforms:

| Option Name | Values | Default |
|-------------|--------|---------|
| postgres_version | 9.5, 9.6, 10, 11 | 11    |
| storage_gb  | 5 - 4096| 5      |
| cores       | 1,2,4,8,16,32,64 | 1      |
| db_name     | | csb-db |

### <a id="azure-postgresql-platform-parameters"></a> Platform Specific Configuration Parameters

Notes below document platform specific information for mapping that might be required.

The following table lists the CPU/memory size mapped onto Azure SKUs:

| Plan   | Sku       |
|--------|-----------|
| small  | GP_Gen5_2 |
| medium | GP_Gen5_4 |
| large  | GP_Gen5_8 |

For more information about the pricing tiers in Azure Database for PostgreSQL, see the
[Microsoft documentation](https://docs.microsoft.com/en-us/azure/postgresql/concepts-pricing-tiers)

<p class="note">
  <strong>Note:</strong> The maximum vCores is dependent on the Service Tier.
  <code>B_</code> = Basic, <code>GP_</code> = General Purpose, and <code>MO_</code> = Memory Optimized.
  See below for details.
</p>

<%# The note below used to be "Note: the same family (B, GP, or MO.) Otherwise Azure will refuse the update request."
I copied the new note from above. %>
<p class="note">
  <strong>Note:</strong> When updating a service instance, the SKU for the updated
  service instance must remain in the same family (<code>B</code>, <code>GP</code>, or <code>MO</code>).
  <%# Should this say tier or family? GP_S is a tier. Can you only use the tiers listed here? %>
  If you update to a different family, Azure refuses the update request.
</p>

#### <a id="azure-postgresql-storage"></a>Storage

Storage auto grow is enabled on Azure.
For more information about storage auto grow, see the
[Microsoft documentation](https://docs.microsoft.com/en-us/azure/postgresql/concepts-pricing-tiers#storage-auto-grow)
Initial storage sizes are per plan.

#### <a id="azure-postgresql-skus"></a> SKUs

This is usually formatted as <code>TIER\_FAMILY\_NUMBER-OF-CORES</code>. Where:
<ul>
  <li>Examples of <code>TIER</code> are <code>B</code>, <code>GP</code>, and <code>MO</code></li>
  <li>Examples of <code>FAMILY</code> are <code>Gen4</code> and <code>Gen5</code></li>
</ul>
Example SKUs are <code>B\_Gen4\_1</code> and <code>G\P_Gen5\_8</code>.

This overrides the number of <code>cores</code> conversion into SKU per the table below.

The table below shows the mapping of number of cores to the corresponding SKU:

| Cores | Instance class |
|-------|----------------|
| 1     | GP\_Gen5\_1      |
| 2     | GP\_Gen5\_2      |
| 4     | GP\_Gen5\_4      |
| 8     | GP\_Gen5\_8      |
| 16    | GP\_Gen5\_16     |
| 32    | GP\_Gen5\_32     |
| 64    | GP\_Gen5\_64     |
<%# Is this table necessary? Can we link to this information in the Microsoft docs? %>

For more information about Azure SKUs, see the
<a href="https://docs.microsoft.com/en-us/azure/mysql/concepts-pricing-tiers">Microsoft documentation</a>.

### <a id="azure-postgresql-azure-parameters"></a> Azure Specific Configuration Parameters

As well as those the parameters in [Platform Specific Configuration Parameters](#azure-postgresql-platform-parameters)
above, you can also configure service specific parameters.
<%# What is the difference between the platform and Azure specific config parameter sections? %>

You can provision a service by running:

```bash
cf create-service csb-azure-postgresql PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the plan or configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME [-p NEW-PLAN] -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning a csb-azure-postgresql service:

<table>
  <thead>
    <tr>
    <th width="20%">Parameter Name</th>
    <th width="10%">Type</th>
    <th width="50%">Description</th>
    <th width="20%">Default</th>
    </tr>
  </thead>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>The name of the Azure instance to create.</td>
    <td><code>csb-mysql-INSTANCE-ID</code></td>
  </tr>
  <tr>
    <td><code>location</code></td>
    <td>string</td>
    <td>
      The Azure region in which to deploy the service instance.
      <p class="note">
        <strong>Note:</strong> Currently Azure SQL is not available in all regions.
        If you configure a region that is unavailable, <%= vars.product_short %> fails.
      </p>
    </td>
    <td><code>westus</code></td>
  </tr>
  <tr>
    <td><code>resource_group</code></td>
    <td>string</td>
    <td>The Azure resource group in which to create the instance.</td>
    <td><code>rg-INSTANCE-NAME</code></td>
  </tr>
  <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>The ID of the Azure tenant for the service instance.</td>
    <td>The value the operator entered for <strong>Tenant ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>The ID of the Azure subscription for the service instance.</td>
    <td>The value the operator entered for <strong>Subscription ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td>The ID of the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>The secret (password) for the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client Secret</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>authorized_network</code></td>
    <td>string</td>
    <td>
      The subnet ID, in long form, of the Azure Virtual Network (VNet) or subnet
      that is attached to this instance to allow remote access.
      By default no VNets are allowed access.
    </td>
    <td><em>n/a</em></td>
  </tr>
  <tr>
    <td><code>sku_name</code></td>
    <td>string</td>
    <td>
      The Azure stock-keeping unit (SKU).
      For more information about configuring this parameter, see <a href="#azure-postgresql-skus">SKUs</a> above.
    </td>
    <td><em>n/a</em></td>
  </tr>
  <tr>
    <td><code>use_tls</code></td>
    <td>boolean</td>
    <td>Use TLS for database connections.</td>
    <td><code>true</code></td>
  </tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Set to <code>true</code> to skip automatic Azure provider registration.
    Set if the service principal being used does not have the rights to register providers.</td>
    <td><code>false</code></td>
  </tr>
</table>

### <a id="azure-postgresql-binding-creds"></a> Binding Credentials

The format for binding credentials for PostgreSQL is as follows:

```json
{
    "name" : "DATABASE-NAME",
    "hostname" : "DATABASE-SERVER-HOST",
    "port" : "DATABASE-SERVER-PORT",
    "username" : "AUTHENTICATION-USERNAME",
    "password" : "AUTHENTICATION-PASSWORD",
    "uri" : "DATABASE-CONNECTION-URI",
    "jdbcUrl" : "JDBC-FORMAT-CONNECTION-URI"
}
```

## <a id="azure-cosmosdb-sql"></a> Azure Cosmos DB SQL API

This section applies to csb-azure-cosmosdb-sql.
This section details the plans and configuration parameters available for Azure Cosmos DB SQL API.

### <a id="azure-cosmosdb-sql-plans"></a> Plans

The table below lists the plans for Azure Cosmos DB SQL API:

| Plan | Description |
|------|-------------|
| small | SQL Cosmos DB Account, no redundancy, 400 request units |
| medium | SQL Cosmos DB Account, single read failover location, 1,000 request units |
| large | SQL Cosmos DB Account, single read/write failover location, 10,000 request units |

### <a id="azure-cosmosdb-sql-parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-azure-cosmosdb-sql PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning a csb-azure-cosmosdb-sql service:

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="50%">Description</th>
      <th width="20%">Default</th>
    </tr>
  </thead>
  <tr>
    <td><code>request_units</code></td>
    <td>integer</td>
    <td>
      The throughput of the MongoDB collection (RU/s). Must be set in increments of 100. The minimum value is 400.
    </td>
    <td><code>400</code></td>
  </tr>
  <tr>
    <td><code>failover_locations</code></td>
    <td>array</td>
    <td>A list of location for the Cosmos DB account. The first location is the default write location.</td>
    <td><code>westus</code></td>
  </tr>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>Account name for your Cosmos DB</td>
    <td><code>csb-INSTANCE-ID</code></td>
  </tr>
  <tr>
    <td><code>resource_group</code></td>
    <td>string</td>
    <td>The Azure resource group in which to create the instance.</td>
    <td><code>rg-ACCOUNT-NAME</code> (<code>ACCOUNT-NAME</code> is always generated)</td>
  </tr>
  <tr>
    <td><code>db_name</code></td>
    <td>string</td>
    <td>Name for your Cosmos DB database</td>
    <td><code>csb-db-INSTANCE-ID</code></td>
  </tr>
  <tr>
    <td><code>location</code></td>
    <td>string</td>
    <td>The location of the CosmosDB account</td>
    <td><code>westus</code></td>
  </tr>
  <tr>
    <td><code>ip_range_filter</code></td>
    <td>string</td>
    <td>
      CosmosDB Firewall Support.
      This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IP's for a given database account.
      IP addresses/ranges must be comma separated and must not contain any spaces. 0.0.0.0 allows access from Azure networks.
      An empty string "" allows access from all public networks.
    </td>
    <td><code>0.0.0.0</code></td>
  </tr>
  <tr>
    <td><code>consistency_level</code></td>
    <td>string</td>
    <td>The Consistency Level to use for this CosmosDB Account - can be either BoundedStaleness, Eventual, Session, Strong or ConsistentPrefix</td>
    <td><code>Session</code></td>
  </tr>
  <tr>
    <td><code>max_interval_in_seconds</code></td>
    <td>integer</td>
    <td>When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400 (1 day). Defaults to 5. Required when consistency_level is set to BoundedStaleness.</td>
    <td><code>5</code></td>
  </tr>
  <tr>
    <td><code>max_staleness_prefix</code></td>
    <td>integer</td>
    <td>When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 10 – 2147483647. Defaults to 100. Required when consistency_level is set to BoundedStaleness.</td>
    <td><code>100</code></td>
  </tr>
  <tr>
    <td><code>enable_multiple_write_locations</code></td>
    <td>boolean</td>
    <td>Enable multiple write locations for this Cosmos DB account</td>
    <td><code>false</code></td>
  </tr>
  <tr>
    <td><code>enable_automatic_failover</code></td>
    <td>boolean</td>
    <td>Enable automatic fail over for this Cosmos DB account</td>
    <td><code>false</code></td>
  </tr>
  <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>The ID of the Azure tenant for the service instance.</td>
    <td>The value the operator entered for <strong>Tenant ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>The ID of the Azure subscription for the service instance.</td>
    <td>The value the operator entered for <strong>Subscription ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td>The ID of the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>The secret (password) for the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client Secret</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Set to <code>true</code> to skip automatic Azure provider registration.
    Set if the service principal being used does not have the rights to register providers.</td>
    <td><code>false</code></td>
  </tr>
  <tr>
    <td><code>authorized_networks</code></td>
    <td>list (string)</td>
    <td>A list of resource IDs for subnets of the authorized Azure Vnet.</td>
    <td><code>[]</code></td>
  </tr>
</table>

### <a id="azure-cosmosdb-sql-binding-creds"></a> Binding Credentials

The format for binding credentials for Azure Cosmos DB SQL API is as follows:

```json
{
    "cosmosdb_host_endpoint" : "COSMOS-DB-HOST-ENDPOINT",
    "cosmosdb_master_key" : "COSMOS-DB-READ-WRITE-KEY",
    "cosmosdb_readonly_master_key" : "COSMOS-DB-READ-ONLY-KEY",
    "cosmosdb_database_id" : "COSMOS-DB-DATABASE-ID"
}
```

## <a id="azure-cosmosdb-mongo"></a> Azure Cosmos DB Mongo API

This section applies to csb-azure-mongodb.
This section details the plans and configuration parameters available for Azure Cosmos DB Mongo API.

### <a id="azure-cosmosdb-mongo-plans"></a> Plans

The table below lists the plans for Azure Cosmos DB Mongo API:

| Plan | Description |
|------|-------------|
| small | Mongo Cosmos DB Account, no redundancy, 400 request units |
| medium | Mongo Cosmos DB Account, single read failover location, 1,000 request units |
| large | Mongo Cosmos DB Account, single read/write failover location, 10,000 request units |

### <a id="azure-cosmosdb-mongo-plans-config"></a> Plan Configuration Parameters

When configuring <%= vars.product_short %> you can add additional new plans.
The table below lists parameters which can only be added at the plan level. Further [configuration properties](#azure-cosmosdb-mongo-parameters) can also be supplied as parameters in plan creation.

| Parameter Name    | Description                     | Default   | Example Value |
|-------------------|---------------------------------|-----------|---------------|
| name              | The plan name.                  | _n/a_     | "plan_1"      |
| id                | A unique GUID.                  | _n/a_     | "guid"        |
| description       | Description of the new plan.    | _n/a_     | "This is a plan" |
| private_endpoint_subnet_id | ID of the Subnet within which Private Endpoint for the CosmosDB account will be created.  | "" | "exampleID"
| private_dns_zone_ids | Array of Private DNS Zone IDs to create private DNS zone groups for when using Private Endpoints  | [] | ["exampleID1", "exampleID2"]

Further information on plan curation is available in <a href="installing-with-azure.html#services">Configure Services with Cloud Service Broker for Azure</a>.

<p class="note">
  <strong>Note:</strong> These configuration values set in the plan cannot be changed by the developers during provision or update operations.
</p>

### <a id="azure-cosmosdb-mongo-parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-azure-mongodb PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning a csb-azure-mongodb service:

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="10%">Default</th>
      <th width="20%">Constraints</th>
    </tr>
  </thead>
  <tr>
    <td><code>request_units</code></td>
    <td>integer</td>
    <td>The throughput of the MongoDB collection (RU/s).</td>
    <td><code>400</code></td>
    <td>
      maximum: 100000
      minimum: 400
      multipleOf: 100
    </td>
  </tr>
  <tr>
    <td><code>failover_locations</code></td>
    <td>array</td>
    <td>A list of location for the Cosmos DB account.  The first location is the default write location</td>
    <td><code>[ "westus" ]</code></td>
    <td>
See locations [here](https://azure.microsoft.com/en-gb/global-infrastructure/data-residency/#select-geography)
    </td>
  </tr>
  <tr>
    <td><code>failover_locations</code></td>
    <td>array</td>
    <td>A list of location for the Cosmos DB account.  The first location is the default write location</td>
    <td><code>[ "westus" ]</code></td>
    <td>
See locations [here](https://azure.microsoft.com/en-gb/global-infrastructure/data-residency/#select-geography)
    </td>
  </tr>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>Name for your Cosmos DB with API for MongoDB instance</td>
    <td><code>csb-mongo-INSTANCE-ID</code></td>
    <td>
maxLength: 98
minLength: 6
pattern: ^[a-z][a-z0-9-]+$
</td>
  </tr>
  <tr>
    <td><code>account_name</code></td>
    <td>string</td>
    <td>Account name for your Cosmos DB with API for MongoDB instance</td>
    <td><code>csbINSTANCE-ID</code></td>
    <td>
      maxLength: 44
      minLength: 6
      pattern: ^[a-z][a-z0-9-]+$
      **(Can not be updated)**
    </td>
  </tr>
  <tr>
    <td><code>resource_group</code></td>
    <td>string</td>
    <td>Name for the resource group for this instance</td>
    <td><code>""</code></td>
    <td>
      maxLength: 64
      minLength: 0
      pattern: ^[a-z][a-z0-9-]+$|^$
      **(Can not be updated)**
    </td>
  </tr>
  <tr>
    <td><code>db_name</code></td>
    <td>string</td>
    <td>Name for your Cosmos DB database with API for Mongo DB</td>
    <td><code>csb-dbINSTANCE-ID</code></td>
    <td>
      maxLength: 255
      pattern: ^[a-z][a-z0-9-_]*$
    </td>
  </tr>
  <tr>
    <td><code>collection_name</code></td>
    <td>string</td>
    <td>Name for your collection</td>
    <td><code>default_collection</code></td>
    <td>
      maxLength: 255
    </td>
  </tr>
  <tr>
    <td><code>shard_key</code></td>
    <td>string</td>
    <td>Name for your shard key</td>
    <td><code>uniqueKey</code></td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>location</code></td>
    <td>string</td>
    <td>The location of the mongodb instance.</td>
    <td><code>westus</code></td>
    <td>See locations [here](https://azure.microsoft.com/en-gb/global-infrastructure/data-residency/#select-geography)
</td>
  </tr>
  <tr>
    <td><code>ip_range_filter</code></td>
    <td>string</td>
    <td>CosmosDB Firewall Support. This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IP's for a given database account.</td>
    <td><code>"0.0.0.0"</code></td>
    <td>IP addresses/ranges must be comma separated and must not contain any spaces. 0.0.0.0 allows access from Azure networks.  An empty string "" allows access from all public networks.</td>
  </tr>
  <tr>
    <td><code>consistency_level</code></td>
    <td>string</td>
    <td>The Consistency Level to use for this CosmosDB Account.</td>
    <td><code>Session</code></td>
    <td>Can be either <code>BoundedStaleness</code>, <code>Eventual</code>, <code>Session</code>, <code>Strong</code> or <code>ConsistentPrefix</code></td>
  </tr>
  <tr>
    <td><code>max_interval_in_seconds</code></td>
    <td>integer</td>
    <td>(Optional) When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated.</td>
    <td><code>5</code></td>
    <td> Accepted range for this value is 5 - 86400 (1 day). Defaults to 5. Required when consistency_level is set to BoundedStaleness.</td>
  </tr>
  <tr>
    <td><code>max_staleness_prefix </code></td>
    <td>integer</td>
    <td>(Optional) When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated.</td>
    <td><code>100</code></td>
    <td>Accepted range for this value is 10 – 2147483647. Required when consistency_level is set to BoundedStaleness.</td>
  </tr>
  <tr>
    <td><code>enable_multiple_write_locations</code></td>
    <td>boolean</td>
    <td>Enable multi-master support for this Cosmos DB account.</td>
    <td><code>false</code></td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>enable_automatic_failover</code></td>
    <td>boolean</td>
    <td>Enable automatic fail over for this Cosmos DB account.</td>
    <td><code>false</code></td>
    <td>n/a</td>
  </tr>
 <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>Azure Tenant to create resource in</td>
    <td>Value set in `Azure Config` tab</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>Azure Subscription to create resource in</td>
    <td>Value set in `Azure Config` tab</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td> Client ID of Azure principal</td>
    <td>Value set in `Azure Config` tab</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>Client secret for Azure principal</td>
    <td>Value set in `Azure Config` tab</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Skip automatic Azure provider registration, set to true if service principal being used does not have rights to register providers</td>
    <td>false</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>authorized_network</code></td>
    <td>string</td>
    <td>The subnet ID of the Azure VNET to which the instance is locked down to. If left unspecified, it will be public.</td>
    <td>""</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>public_network_access_enabled</code></td>
    <td>boolean</td>
    <td>Whether or not public network access is allowed for this CosmosDB account. </td>
    <td>true</td>
    <td>n/a</td>
  </tr>
</table>

### <a id="azure-cosmosdb-mongo-binding-creds"></a> Binding Credentials

The format for binding credentials for Azure Cosmos DB SQL API is as follows:

```json
{
    "uri" : "The primary master mongodb uri of the Cosmos DB Mongo Collection.",
    "status" : "Status of db"
}
```

## <a id="azure-redis"></a> Azure Redis

This section applies to csb-azure-redis.
This section details the plans and configuration parameters available for Azure Redis.

### <a id="azure-redis-plans"></a> Plans

The table below lists the plans for Azure Redis:

| Plan | Description |
|------|-------------|
| small | Basic plan with 1GB cache and no failover. High Availability is not provided, update WILL result in loss of data. |
| medium | Basic plan with 6GB cache and no failover. High Availability is not provided, update WILL result in loss of data. |
| large | Basic plan with 26GB cache and no failover. High Availability is not provided, update WILL result in loss of data. |
| ha-small | Standard plan with 1GB cache with high availability and no failover. |
| ha-medium | Standard plan with 6GB cache with high availability and no failover. |
| ha-large | Standard plan with 26GB cache with high availability and no failover. |
| ha-P1 | A High Availability plan with 1GB cache and no failover |

### <a id="azure-redis-plans-config"></a> Plan Configuration Parameters

When configuring <%= vars.product_short %> you can add additional new plans.
The table below lists parameters which can only be added at the plan level. Further [configuration properties](#azure-cosmosdb-redis-parameters) can also be supplied as parameters in plan creation.

| Parameter Name    | Description                     | Default   | Example Value |
|-------------------|---------------------------------|-----------|---------------|
| name              | The plan name.                  | _n/a_     | "plan_1"      |
| id                | A unique GUID.                  | _n/a_     | "guid"        |
| description       | Description of the new plan.    | _n/a_     | "This is a plan" |
| sku_name | The SKU of Redis to use.  | _n/a_ | "Basic" |
| family |The SKU family/pricing group to use.  | _n/a_ |  'C' (Basic/Standard)  or  'P' (Premium)|
| capacity |The size of the Redis cache to deploy. Must be between 1-6 | 1 |  6  |
| tls_min_version | Minimum enforced TLS version. Possible values are 1.0, 1.1, 1.2 | "1.2" | "1.2" |
| firewall_rules | Array of firewall rule start/end IP pairs. | []| [["1.2.3.4", "2.3.4.5"], ["5.6.7.8", "6.7.8.9"]] |
| private_endpoint_subnet_id | The ID of the Subnet within which Private Endpoint for the Redis cache will be created. | ""| "someID" |
| private_dns_zone_ids | Array of Private DNS Zone IDs to create private DNS zone groups for when using Private Endpoints | [] | ["someID", "anotherID"] |

Further information on plan curation is available in <a href="installing-with-azure.html#services">Configure Services with Cloud Service Broker for Azure</a>.

<p class="note">
  <strong>Note:</strong> These configuration values set in the plan cannot be changed by the developers during provision or update operations.
</p>

### <a id="azure-redis-parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-azure-redis PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning a csb-azure-redis service:

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="40%">Description</th>
      <th width="10%">Default</th>
      <th width="20%">Constraints</th>
    </tr>
  </thead>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>Name for your mysql instance</td>
    <td><code>csb-redis-INSTANCE-ID</code></td>
    <td>
      maxLength: 98
      minLength: 6
      pattern: ^[a-z][a-z0-9-]+$
      **Can not be updated**
    </td>
  </tr>
  <tr>
    <td><code>resource_group</code></td>
    <td>string</td>
    <td>Name for the resource group for this instance</td>
    <td><code>''</code></td>
    <td>
      maxLength: 64
      minLength: 0
      pattern: ^[a-z][a-z0-9-]+$|^$
    </td>
  </tr>
  <tr>
    <td><code>subnet_id</code></td>
    <td>string</td>
    <td>The ID of the Subnet within which the Redis Cache should be deployed, valid only for Premium SKU </td>
    <td><code>''</code></td>
    <td>
    **Can not be updated**
    </td>
  </tr>
  <tr>
    <td><code>location</code></td>
    <td>string</td>
    <td>The location of the Redis instance.</td>
    <td><code>westus</code></td>
    <td>See locations [here](https://azure.microsoft.com/en-gb/global-infrastructure/data-residency/#select-geography)
    </td>
  </tr>
 <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>Azure Tenant to create resource in</td>
    <td>Value set in `Azure Config` tab</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>Azure Subscription to create resource in</td>
    <td>Value set in `Azure Config` tab</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td> Client ID of Azure principal</td>
    <td>Value set in `Azure Config` tab</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>Client secret for Azure principal</td>
    <td>Value set in `Azure Config` tab</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Skip automatic Azure provider registration, set to true if service principal being used does not have rights to register providers</td>
    <td>false</td>
    <td>n/a</td>
  </tr>
  <tr>
    <td><code>maxmemory_policy</code></td>
    <td>string</td>
    <td>Max memory eviction policy.</td>
    <td><code>volatile-lru</code></td>
    <td>Possible values are <code>volatile-lru</code>, <code>allkeys-lru</code>, <code>volatile-random</code>, <code>allkeys-random</code>, <code>volatile-ttl</code>, <code>noeviction</code></td>
  </tr>
</table>

### <a id="azure-redis-binding-creds"></a> Binding Credentials

The format for binding credentials for Azure Redis is as follows:

```json
{
    "name" : "The name of the redis.",
    "host" : "Hostname or IP address of the exposed redis endpoint used by clients to connect to the service.",
    "tls_port" : "The tls_port number of the exposed redis instance.",
    "password" : "The password to authenticate to the redis instance."
}
```

## <a id="azure-storage-account"></a> Azure Storage Account

This section applies to csb-azure-storage-account.
This section details the plans and configuration parameters available for Azure Storage Account.

### <a id="azure-storage-account-plans"></a> Plans

The table below lists the plans for Azure Storage Account:

| Plan | Description |
|------|-------------|
| standard | General-purpose V2 account. Locally redundant, standard tier |

### <a id="azure-storage-account-parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-azure-storage-account PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning a csb-azure-storage-account service:

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="50%">Description</th>
      <th width="20%">Default</th>
    </tr>
  </thead>
  <tr>
    <td><code>storage_account_type</code></td>
    <td>string</td>
    <td>
      The account type - <code>BlobStorage</code>, <code>BlockBlobStorage</code>,
      <code>FileStorage</code>, <code>Storage</code>, or <code>StorageV2</code>.
    </td>
    <td><code>StorageV2</code></td>
  </tr>
  <tr>
    <td><code>tier</code></td>
    <td>string</td>
    <td>The storage tier to use - <code>Standard</code> or <code>Premium</code>.</td>
    <td><code>Standard</code></td>
  </tr>
  <tr>
    <td><code>replication_type</code></td>
    <td>string</td>
    <td>The replication type - <code>LRS</code>, <code>GRS</code>, <code>RAGRS</code>, or <code>ZRS</code>.</td>
    <td><code>LRS</code></td>
  </tr>
  <tr>
    <td><code>location</code></td>
    <td>string</td>
    <td>The Azure region in which to deploy the service instance. <%# Should we add the note about not being available in all regions here like in Azure SQL above? %></td>
    <td><code>westus</code></td>
  </tr>
  <tr>
    <td><code>resource_group</code></td>
    <td>string</td>
    <td>The Azure resource group in which to create the instance.</td>
    <td><code>rg-ACCOUNT-NAME</code> (<code>ACCOUNT-NAME</code> is always generated)</td>
  </tr>
  <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>The ID of the Azure tenant for the service instance.</td>
    <td>The value the operator entered for <strong>Tenant ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>The ID of the Azure subscription for the service instance.</td>
    <td>The value the operator entered for <strong>Subscription ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td>The ID of the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>The secret (password) for the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client Secret</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Set to <code>true</code> to skip automatic Azure provider registration.
    Set if the service principal being used does not have the rights to register providers.</td>
    <td><code>false</code></td>
  </tr>
  <tr>
    <td><code>authorized_networks</code></td>
    <td>list (string)</td>
    <td>A list of resource IDs for subnets of the authorized Azure Vnet.</td>
    <td><code>[]</code></td>
  </tr>
</table>

### <a id="azure-storage-account-binding-creds"></a> Binding Credentials

The format for binding credentials for Azure Storage Account is as follows:

```json
{
    "storage_account_name" : "STORAGE-ACCOUNT-NAME",
    "primary_access_key" : "PRIMARY-ACCESS-KEY",
    "secondary_access_key" : "SECONDARY-ACCESS-KEY"
}
```

## <a id="azure-resource-group"></a> Azure Resource Group

This section applies to csb-azure-resource-group.
This section details the plans and configuration parameters available for Azure Resource Group.

### <a id="azure-resource-group-plans"></a> Plans

The table below lists the plans for Azure Storage Account:

| Plan | Description |
|------|-------------|
| standard | An Azure Resource Group |

### <a id="azure-resource-group-parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-azure-resource-group PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The table below lists the parameters that you can configure, using the `-c` flag, when
provisioning a csb-azure-storage-account service:

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="50%">Description</th>
      <th width="20%">Default</th>
    </tr>
  </thead>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>
      The name of the Azure Resource Group
    </td>
    <td>N/A</td>
  </tr>
  <tr>
    <td><code>location</code></td>
    <td>string</td>
    <td>The location of the Azure Resource Group.</td>
    <td><code>westus</code></td>
  </tr>
  <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>The ID of the Azure tenant for the service instance.</td>
    <td>The value the operator entered for <strong>Tenant ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>The ID of the Azure subscription for the service instance.</td>
    <td>The value the operator entered for <strong>Subscription ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td>The ID of the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client ID</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>The secret (password) for the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client Secret</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>Set to <code>true</code> to skip automatic Azure provider registration.
    Set if the service principal being used does not have the rights to register providers.</td>
    <td><code>false</code></td>
  </tr>
</table>

## <a id="azure-eventhub"></a> Azure Event Hub

This section applies to csb-azure-eventhubs.
This section details the plans and configuration parameters available for Azure Event Hub.

### <a id="azure-eventhub-plans"></a> Plans

The table below lists the plans for Azure Event Hub:

| Plan | Description |
|------|-------------|
| basic | Basic Tier, 1 Consumer group, 100 Brokered connections |
| standard | Standard Tier, 20 Consumer groups, 1000 Brokered connections, Additional Storage, Publisher Policies |

### <a id="azure-eventhub-parameters"></a> Configuration Parameters

You can provision a service by running:

```bash
cf create-service csb-azure-eventhubs PLAN-NAME SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

You can update the configuration parameters for a service instance by running:

```bash
cf update-service SERVICE-INSTANCE-NAME -c '{"PARAMETER-NAME": "PARAMETER-VALUE"}'
```

The following table lists the parameters that you can configure, using the `-c` flag, when
provisioning a csb-azure-eventhubs service:

<table>
  <thead>
    <tr>
      <th width="20%">Parameter Name</th>
      <th width="10%">Type</th>
      <th width="50%">Description</th>
      <th width="20%">Default</th>
    </tr>
  </thead>
  <tr>
    <td><code>instance_name</code></td>
    <td>string</td>
    <td>
      The name of your Event Hub instance. This parameter has the following constraints:
      <ul>
        <li>maxLength: 98</li>
        <li>minLength: 6</li>
        <li>pattern: ^[a-z][a-z0-9-]+$</li>
      </ul>
    </td>
    <td><code>csb-eventhubs-INSTANCE-ID</code></td>
  </tr>
  <tr>
    <td><code>resource_group</code></td>
    <td>string</td>
    <td>
      The name of the resource group for the instance. This cannot be updated. <br>
      This parameter has the following constraints:
      <ul>
        <li>maxLength: 64</li>
        <li>minLength: 0</li>
        <li>pattern: ^[a-z][a-z0-9-]+$|^$</li>
      </ul>
    </td>
    <td><code>""</code></td>
  </tr>
  <tr>
    <td><code>location</code></td>
    <td>string</td>
    <td>The location of the mysql <!-- should this be Event Hub? --> instance. This cannot be updated. <br>
      For available locations, see the
      <a href="https://azure.microsoft.com/en-gb/global-infrastructure/data-residency/#select-geography">Microsoft documentation</a>.
    </td>
    <td><code>westus</code></td>
  </tr>
  <tr>
    <td><code>azure_tenant_id</code></td>
    <td>string</td>
    <td>The ID of the Azure tenant for the instance.</td>
    <td>The value the operator entered for <strong>Tenant ID</strong> in <%= vars.ops_manager %></td>
  </tr>
  <tr>
    <td><code>azure_subscription_id</code></td>
    <td>string</td>
    <td>The ID of the Azure subscription for the instance.</td>
    <td>The value the operator entered for <strong>Subscription ID</strong> in <%= vars.ops_manager %></td>
  </tr>
  <tr>
    <td><code>azure_client_id</code></td>
    <td>string</td>
    <td>The ID of the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client ID</strong> in <%= vars.ops_manager %></td>
  </tr>
  <tr>
    <td><code>azure_client_secret</code></td>
    <td>string</td>
    <td>The secret (password) for the Azure service principal to authenticate for service instance creation.</td>
    <td>The value the operator entered for <strong>Client Secret</strong> in <%= vars.ops_manager %>.</td>
  </tr>
  <tr>
    <td><code>skip_provider_registration</code></td>
    <td>boolean</td>
    <td>
      Set to <code>true</code> to skip automatic Azure provider registration.
      Set if the service principal being used does not have the rights to register providers.
    </td>
    <td>false</td>
  </tr>
  <tr>
    <td><code>sku</code></td>
    <td>boolean</td>
    <td>Defines which tier to use. Options are <code>Basic</code> or <code>Standard</code>.</td>
    <td>Basic</td>
  </tr>
  <tr>
    <td><code>auto_inflate_enabled</code></td>
    <td>boolean</td>
    <td>Auto Inflate enabled for the EventHub Namespace. Options are <code>true</code> or <code>false</code>.</td>
    <td>false</td>
  </tr>
  <tr>
    <td><code>partition_count</code></td>
    <td>integer</td>
    <td>
      Specifies the current number of shards on the Event Hub.
      Changing this forces a new resource to be created.
    </td>
    <td>2</td>
  </tr>
  <tr>
    <td><code>message_retention</code></td>
    <td>integer</td>
    <td>
      Specifies the number of days to retain the events for this Event Hub.
      Must be between 1 and 7 days; or 1 day when using a Basic SKU for the parent Event Hub.
    </td>
    <td>1</td>
  </tr>
</table>

### <a id="azure-eventhubs-binding-creds"></a> Binding Credentials

The format for binding credentials for Azure Event Hub is as follows:

```json
{
    "eventhub_rg_name" : "RESOURCE-GROUP",
    "namespace_name" : "EVENT-HUB-NAMESPACE",
    "eventhub_name" : "EVENT-HUB-NAME"
}
```

Where:

- `RESOURCE-GROUP` is the resource group containing the Event Hub namespace.
- `EVENT-HUB-NAMESPACE` is the name of the Event Hub Namespace.
- `EVENT-HUB-NAME` is the name of the Event Hub.
